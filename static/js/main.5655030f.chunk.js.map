{"version":3,"sources":["Slider.tsx","Curve.ts","State.ts","ControlsOverlay.tsx","renderFrame.ts","RadialsCanvas.tsx","useCanvasRenderer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledThumb","styled","div","sliderHeight","Thumb","props","state","valueNow","StyledTrack","index","Track","StyledSlider","ReactSlider","sliderWidth","StyledSliderContainer","p","fontSize","StyledLabelSpan","span","Slider","value","label","onChangeExternal","onChange","step","min","max","smallFont","useCallback","newValue","renderTrack","renderThumb","Curve","a1","c1","c2","a2","this","ctx","rotation","offset","vec2","rotate","undefined","add","x","y","beginPath","moveTo","bezierCurveTo","stroke","clamp","Math","State","maxCurveSize","maxControlPointSize","round","maxCPVelocity","curveWidth","numRadials","windowSizeProportion","c1x","c1y","c2x","c2y","c1xVelocity","c1yVelocity","c2xVelocity","c2yVelocity","skipEveryNthRadial","numberOfRadialsToSkip","renderControls","setMaxCurveSize","vel","OverlayDiv","showBackground","ControlsDiv","ControlsContainerDiv","StyledDivider","StyledButton","button","StyledSectionLabel","ControlsOverlay","forceUpdate","useState","updateState","useForceUpdate","useEffect","showControls","setShowControls","allCPVel","setAllCPVel","onClick","prev","setNumRadials","bind","n","setC1x","setC1y","setC2x","setC2y","setC1xVelocity","setC1yVelocity","setC2xVelocity","setC2yVelocity","abs","renderFrame","canvas","timeDelta","center","window","innerWidth","innerHeight","clearRect","width","height","strokeStyle","lineWidth","drawSurroundingCircle","curve","getCurve","i","PI","render","arc","StyledCanvas","RadialsCanvas","canvasRef","useRef","resizeCanvas","current","newMaxCurveSize","renderRequestId","startTime","addEventListener","requestAnimationFrame","timestamp","context2D","getContext","deltaTime","cancelAnimationFrame","removeEventListener","useCanvasRenderer","id","ref","AppDiv","App","stateRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5655030f.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport ReactSlider, { ReactSliderProps } from \"react-slider\";\nimport styled from \"styled-components\";\n\n// https://zillow.github.io/react-slider/\nconst sliderHeight = 20;\nconst sliderWidth = 200;\n\nconst StyledThumb = styled.div`\n  height: ${sliderHeight + 2}px;\n  line-height: ${sliderHeight + 2}px;\n  width: ${sliderHeight + 2}px;\n  text-align: center;\n  background-color: #0099ff;\n  color: #fff;\n  border-radius: 50%;\n  cursor: grab;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Thumb = (props: any, state: any) => (\n  <StyledThumb {...props}>{state.valueNow}</StyledThumb>\n);\n\nconst StyledTrack = styled.div<{ index: number }>`\n  height: ${sliderHeight}px;\n  border-radius: 999px;\n  background: ${(props) => (props.index === 0 ? \"#005bd9\" : \"#1e217d\")};\n  border: 1px solid #606060;\n`;\n\nexport const Track = (props: any, state: any) => (\n  <StyledTrack {...props} index={state.index} />\n);\n\nconst StyledSlider = styled(ReactSlider)`\n  width: ${sliderWidth}px;\n\n  @media (max-width: 768px) {\n    width: ${sliderWidth * 0.7}px;\n  }\n`;\n\nconst StyledSliderContainer = styled.div<{ fontSize: number }>`\n  display: flex;\n  padding: 5px 0px;\n  ${StyledThumb} {\n    font-size: ${(p) => p.fontSize}px;\n  }\n`;\n\nconst StyledLabelSpan = styled.span`\n  text-align: center;\n  line-height: ${sliderHeight}px;\n  padding-left: 10px;\n  font-size: 14px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\ninterface SliderProps extends Partial<ReactSliderProps<number>> {\n  value: number;\n  label: string;\n  onChange?: (value: number) => void;\n  smallFont?: boolean;\n}\n\nexport const Slider: React.FC<SliderProps> = ({\n  value,\n  label,\n  onChange: onChangeExternal,\n  step,\n  min,\n  max,\n  smallFont = false,\n}) => {\n  const onChange = useCallback(\n    (newValue) => {\n      onChangeExternal?.(newValue);\n    },\n    [onChangeExternal]\n  );\n\n  return (\n    <StyledSliderContainer fontSize={smallFont ? 9 : 16}>\n      <StyledSlider\n        renderTrack={Track}\n        renderThumb={Thumb}\n        value={[value]}\n        onChange={onChange}\n        step={step}\n        min={min}\n        max={max}\n      />\n      <StyledLabelSpan>{label}</StyledLabelSpan>\n    </StyledSliderContainer>\n  );\n};\n","import vec2 from \"vec2\";\n\nexport class Curve {\n  a1: vec2;\n  c1: vec2;\n  c2: vec2;\n  a2: vec2;\n\n  constructor(a1: vec2, c1: vec2, c2: vec2, a2: vec2) {\n    this.a1 = a1;\n    this.c1 = c1;\n    this.c2 = c2;\n    this.a2 = a2;\n  }\n\n  render(ctx: CanvasRenderingContext2D, rotation: number = 0, offset: vec2 = new vec2(0,0)) {\n    const a1 = this.a1.rotate(rotation, undefined, true).add(offset.x, offset.y);\n    const c1 = this.c1.rotate(rotation, undefined, true).add(offset.x, offset.y);;\n    const c2 = this.c2.rotate(rotation, undefined, true).add(offset.x, offset.y);;\n    const a2 = this.a2.rotate(rotation, undefined, true).add(offset.x, offset.y);;\n\n    ctx.beginPath();\n    ctx.moveTo(a1.x, a1.y);\n    ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, a2.x, a2.y);\n    ctx.stroke();\n  }\n}","import vec2 from \"vec2\";\nimport { Curve } from \"./Curve\";\n\nexport const startingCPVelocity = 1.0;\n\nconst clamp = (x: number, value: number) => Math.max(Math.min(x, value), -value);\n\nexport class State {\n  maxCurveSize = 400;\n  maxControlPointSize = Math.round(this.maxCurveSize*6/5);\n  maxCPVelocity = 3;\n\n  curveWidth = 4;\n\n  numRadials = 10;\n\n  windowSizeProportion = 0.7;\n\n  c1x: number;\n  c1y: number;\n  c2x: number;\n  c2y: number;\n\n  c1xVelocity: number;\n  c1yVelocity: number;\n  c2xVelocity: number;\n  c2yVelocity: number;\n\n  skipEveryNthRadial = 0;\n  numberOfRadialsToSkip = 1;\n\n  renderControls: () => void;\n\n  constructor() {\n    this.setMaxCurveSize(400);\n\n    this.c1x = 90;\n    this.c1y = 130;\n    this.c2x = 150;\n    this.c2y = -20;\n\n    this.c1xVelocity = 1.0;\n    this.c1yVelocity = 1.2;\n    this.c2xVelocity = 1.4;\n    this.c2yVelocity = 1.6;\n\n    this.renderControls = () => {}\n  }\n\n  setNumRadials(numRadials: number) {\n    this.numRadials = numRadials;\n  }\n\n  setMaxCurveSize(maxCurveSize: number) {\n    this.maxCurveSize = maxCurveSize;\n    this.maxControlPointSize = Math.round(this.maxCurveSize*6/5);\n  }\n\n  setC1x(c1x: number) {\n    this.c1x = clamp(c1x, this.maxControlPointSize);\n  }\n  setC1y(c1y: number) {\n    this.c1y = clamp(c1y, this.maxControlPointSize);\n  }\n  setC2x(c2x: number) {\n    this.c2x = clamp(c2x, this.maxControlPointSize);\n  }\n  setC2y(c2y: number) {\n    this.c2y = clamp(c2y, this.maxControlPointSize);\n  }\n  setC1xVelocity(vel: number) {\n    this.c1xVelocity = clamp(this.c1xVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n  setC1yVelocity(vel: number) {\n    this.c1yVelocity = clamp(this.c1yVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n  setC2xVelocity(vel: number) {\n    this.c2xVelocity = clamp(this.c2xVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n  setC2yVelocity(vel: number) {\n    this.c2yVelocity = clamp(this.c2yVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n\n  getCurve() {\n    return new Curve(\n      new vec2(0, 0),\n      new vec2(this.c1x, this.c1y),\n      new vec2(this.c2x, this.c2y),\n      new vec2(this.maxCurveSize, 0)\n    );\n  }\n}","import { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Slider } from \"./Slider\";\nimport { startingCPVelocity, State } from \"./State\";\n\nconst OverlayDiv = styled.div<{ showBackground: boolean }>`\n  position: absolute;\n  color: white;\n  padding-left: 10px;\n  padding-right: 10px;\n  height: 100vh;\n  background: linear-gradient(\n    0.25turn,\n    rgba(0, 0, 0, ${(p) => (p.showBackground ? 0.5 : 0)}),\n    92%,\n    rgba(0, 0, 0, 0)\n  );\n\n  @media (max-width: 768px) {\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n`;\n\nconst ControlsDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ControlsContainerDiv = styled.div``;\n\nconst StyledDivider = styled.div`\n  background-color: grey;\n  height: 1px;\n  width: 100%;\n  margin: 8px 0px;\n\n  @media (max-width: 768px) {\n    margin: 4px 0px;\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: #0099ff;\n  border-radius: 5px;\n  margin-left: 5px;\n  color: white;\n  font-size: 20px;\n`;\n\nconst StyledSectionLabel = styled.span`\n  color: white;\n  font-size: 16px;\n  padding: 16px 0px 4px;\n  font-weight: bold;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    padding: 8px 0px 2px;\n  }\n`;\n\nconst useForceUpdate = () => {\n  const [, updateState] = useState({});\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  return forceUpdate;\n};\n\nexport const ControlsOverlay: React.FC<{ state: State }> = ({ state }) => {\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    state.renderControls = forceUpdate;\n  }, [forceUpdate, state]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  const [allCPVel, setAllCPVel] = useState(startingCPVelocity);\n\n  const renderControlPointSliders = () => {\n    return (\n      <>\n        <Slider\n          value={state.c1x}\n          min={-state.maxControlPointSize}\n          max={state.maxControlPointSize}\n          onChange={state.setC1x.bind(state)}\n          label=\"CP 1: x Position\"\n          smallFont\n        />\n        <Slider\n          value={state.c1y}\n          min={-state.maxControlPointSize}\n          max={state.maxControlPointSize}\n          onChange={state.setC1y.bind(state)}\n          label=\"CP 1: y Position\"\n          smallFont\n        />\n        <Slider\n          value={state.c2x}\n          min={-state.maxControlPointSize}\n          max={state.maxControlPointSize}\n          onChange={state.setC2x.bind(state)}\n          label=\"CP 2: x Position\"\n          smallFont\n        />\n        <Slider\n          value={state.c2y}\n          min={-state.maxControlPointSize}\n          max={state.maxControlPointSize}\n          onChange={state.setC2y.bind(state)}\n          label=\"CP 2: y Position\"\n          smallFont\n        />\n      </>\n    );\n  };\n\n  const renderControlPointVelocitySliders = () => {\n    return (\n      <>\n        <Slider\n          value={allCPVel}\n          min={0}\n          max={state.maxCPVelocity}\n          onChange={(vel) => {\n            state.setC1xVelocity(vel);\n            state.setC1yVelocity(vel);\n            state.setC2xVelocity(vel);\n            state.setC2yVelocity(vel);\n            setAllCPVel(vel);\n          }}\n          label=\"Set All CP Velocities\"\n          step={0.01}\n          smallFont\n        />\n        <StyledDivider />\n        <Slider\n          value={Math.abs(state.c1xVelocity)}\n          min={0}\n          max={state.maxCPVelocity}\n          onChange={state.setC1xVelocity.bind(state)}\n          label=\"CP 1: x Velocity\"\n          step={0.01}\n          smallFont\n        />\n        <Slider\n          value={Math.abs(state.c1yVelocity)}\n          min={0}\n          max={state.maxCPVelocity}\n          onChange={state.setC1yVelocity.bind(state)}\n          label=\"CP 1: y Velocity\"\n          step={0.01}\n          smallFont\n        />\n        <Slider\n          value={Math.abs(state.c2xVelocity)}\n          min={0}\n          max={state.maxCPVelocity}\n          onChange={state.setC2xVelocity.bind(state)}\n          label=\"CP 2: x Velocity\"\n          step={0.01}\n          smallFont\n        />\n        <Slider\n          value={Math.abs(state.c2yVelocity)}\n          min={0}\n          max={state.maxCPVelocity}\n          onChange={state.setC2yVelocity.bind(state)}\n          label=\"CP 2: y Velocity\"\n          step={0.01}\n          smallFont\n        />\n      </>\n    );\n  };\n\n  const renderControls = () => (\n    <ControlsDiv>\n      <Slider\n        value={state.numRadials}\n        min={1}\n        max={75}\n        onChange={state.setNumRadials.bind(state)}\n        label=\"Num of Radials\"\n      />\n      <Slider\n        value={state.skipEveryNthRadial}\n        min={0}\n        max={10}\n        onChange={(n) => (state.skipEveryNthRadial = n)}\n        label=\"Skip the Nth Radial\"\n      />\n      <Slider\n        value={state.numberOfRadialsToSkip}\n        min={1}\n        max={Math.max(state.skipEveryNthRadial - 1, 1)}\n        onChange={(n) => (state.numberOfRadialsToSkip = n)}\n        label=\"Num Radials to Skip\"\n      />\n      <StyledSectionLabel>Control Points</StyledSectionLabel>\n      {renderControlPointSliders()}\n      <StyledSectionLabel>Control Point Velocities</StyledSectionLabel>\n      {renderControlPointVelocitySliders()}\n    </ControlsDiv>\n  );\n\n  return (\n    <OverlayDiv showBackground={showControls}>\n      <h3>\n        <StyledButton onClick={() => setShowControls((prev) => !prev)}>\n          {showControls ? \"Hide Controls\" : \"Show Controls\"}\n        </StyledButton>\n      </h3>\n      {showControls && (\n        <ControlsContainerDiv>{renderControls()}</ControlsContainerDiv>\n      )}\n    </OverlayDiv>\n  );\n};\n","import vec2 from \"vec2\";\nimport { State } from \"./State\";\n\nexport type RenderFrame = (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D,  state: State, timeDelta: number) => void;\n\nexport const renderFrame: RenderFrame = (canvas, ctx,  state, timeDelta) => {\n  updateState(state, timeDelta);\n  const center = new vec2(window.innerWidth / 2.0, window.innerHeight / 2.0);\n\n  // Setup next frame\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = \"white\";\n  ctx.lineWidth = state.curveWidth;\n\n  drawSurroundingCircle(ctx, state, center);\n\n  const curve = state.getCurve();\n  for (let i = 0; i < state.numRadials; ++i) {\n    if (state.skipEveryNthRadial > 0 && i % (state.skipEveryNthRadial+1) <= state.numberOfRadialsToSkip-1) continue;\n\n    const rotation = ((Math.PI * 2) / state.numRadials) * i;\n    curve.render(ctx, rotation, center);\n  }\n};\n\nconst drawSurroundingCircle = (ctx: CanvasRenderingContext2D, state: State, center: vec2) => {\n  ctx.moveTo(center.x + state.maxCurveSize, center.y);\n  ctx.arc(center.x, center.y, state.maxCurveSize, 0, Math.PI*2);\n  ctx.stroke();\n}\n\nconst updateState = (state: State, timeDelta: number) => {\n  if (!timeDelta) return;\n\n  if (state.c1x >= state.maxControlPointSize) \n    state.c1xVelocity = -Math.abs(state.c1xVelocity);\n  if (state.c1x <= -state.maxControlPointSize) \n    state.c1xVelocity = Math.abs(state.c1xVelocity);\n\n  if (state.c1y >= state.maxControlPointSize) \n    state.c1yVelocity = -Math.abs(state.c1yVelocity);\n  if (state.c1y <= -state.maxControlPointSize) \n    state.c1yVelocity = Math.abs(state.c1yVelocity);\n\n  if (state.c2x >= state.maxControlPointSize) \n    state.c2xVelocity = -Math.abs(state.c2xVelocity);\n  if (state.c2x <= -state.maxControlPointSize) \n    state.c2xVelocity = Math.abs(state.c2xVelocity);\n\n  if (state.c2y >= state.maxControlPointSize) \n    state.c2yVelocity = -Math.abs(state.c2yVelocity);\n  if (state.c2y <= -state.maxControlPointSize) \n    state.c2yVelocity = Math.abs(state.c2yVelocity);\n\n  state.setC1x(state.c1x + state.c1xVelocity*(timeDelta/10));\n  state.setC1y(state.c1y + state.c1yVelocity*(timeDelta/10));\n  state.setC2x(state.c2x + state.c2xVelocity*(timeDelta/10));\n  state.setC2y(state.c2y + state.c2yVelocity*(timeDelta/10));\n\n  state.renderControls();\n}","import styled from \"styled-components\";\nimport { renderFrame } from \"./renderFrame\";\nimport { State } from \"./State\";\nimport { useCanvasRenderer } from \"./useCanvasRenderer\";\n\nconst StyledCanvas = styled.canvas`\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background-color: #222222;\n  overflow-y: none;\n`;\n\nexport const RadialsCanvas: React.FC<{ state: State }> = ({ state }) => {\n  const canvasRef = useCanvasRenderer(renderFrame, state);\n  return <StyledCanvas id=\"radials-canvas\" ref={canvasRef} />;\n};\n","import { useRef, useEffect, useCallback } from \"react\";\nimport { RenderFrame } from \"./renderFrame\";\nimport { State } from \"./State\";\n\nexport const useCanvasRenderer = (render: RenderFrame, state: State) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const resizeCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      const newMaxCurveSize =\n        (Math.min(canvas.width, canvas.height) * state.windowSizeProportion) /\n        2;\n      state.setMaxCurveSize(newMaxCurveSize);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    let renderRequestId: number;\n    let startTime: number | undefined;\n    window.addEventListener(\"resize\", resizeCanvas, false);\n    resizeCanvas();\n\n    const renderFrame = (timestamp: number) => {\n      const canvas = canvasRef.current;\n      const context2D = canvas?.getContext(\"2d\");\n\n      if (startTime === undefined) startTime = timestamp;\n      const deltaTime = timestamp - startTime;\n      startTime = timestamp;\n\n      if (canvas && context2D) render(canvas, context2D, state, deltaTime);\n\n      renderRequestId = requestAnimationFrame(renderFrame);\n    };\n    requestAnimationFrame(renderFrame);\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(renderRequestId);\n      window.removeEventListener(\"resize\", resizeCanvas);\n    };\n  }, [render, state, resizeCanvas]);\n\n  return canvasRef;\n};\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ControlsOverlay } from \"./ControlsOverlay\";\nimport { RadialsCanvas } from \"./RadialsCanvas\";\nimport { State } from \"./State\";\n\nconst AppDiv = styled.div`\n  position: relative;\n`;\n\nfunction App() {\n  const stateRef = useRef<State>(new State());\n\n  return (\n    <AppDiv>\n      <RadialsCanvas state={stateRef.current} />\n      <ControlsOverlay state={stateRef.current} />\n    </AppDiv>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}