{"version":3,"sources":["ControlLabel.tsx","Slider.tsx","Curve.ts","State.ts","Toggler.tsx","Dropdown.tsx","ControlsOverlay.tsx","renderFrame.ts","RadialsCanvas.tsx","useCanvasRenderer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ControlLabel","styled","span","sliderWidth","StyledThumb","div","sliderHeight","Thumb","props","state","valueNow","StyledTrack","index","Track","StyledSlider","ReactSlider","StyledSliderContainer","p","fontSize","Slider","value","label","onChangeExternal","onChange","step","min","max","smallFont","useCallback","newValue","renderTrack","renderThumb","Curve","a1","c1","c2","a2","this","ctx","rotation","offset","vec2","color","drawControlLines","scale","multiply","rotate","undefined","add","x","y","strokeStyle","beginPath","moveTo","bezierCurveTo","lineTo","stroke","clamp","Math","State","maxCurveSize","maxControlPointSize","round","maxCPVelocity","maxScaleDelta","scaleVelocity","curveWidth","numRadials","skipEveryNthRadial","numberOfRadialsToSkip","windowSizeProportion","c1x","c1y","c2x","c2y","c1xVelocity","c1yVelocity","c2xVelocity","c2yVelocity","spin","spinVelocity","showControlLines","colorPalette","colorPaletteSize","colorHue","colorLuminosity","renderControls","setMaxCurveSize","vel","randomColor","count","hue","luminosity","length","ContainerDiv","StyledControlLabel","Toggler","defaultChecked","icons","selectControlHeight","customSelectStyles","control","provided","height","minHeight","backgroundColor","border","option","isSelected","indicatorsContainer","padding","indicatorSeparator","input","caretColor","placeholder","paddingTop","paddingLeft","fontStyle","singleValue","display","valueContainer","menu","zIndex","menuList","StyledSelect","Select","StyledDropdownDiv","Dropdown","options","styles","OverlayDiv","showBackground","ControlsDiv","ControlsContainerDiv","StyledDivider","StyledButton","button","ControlButton","StyledRegenPaletteButton","StyledSectionLabel","StyledAnchor","a","StyledFooter","StyledControlScrollerDiv","ControlsOverlay","forceUpdate","useState","updateState","useForceUpdate","useEffect","showControls","setShowControls","allCPVel","setAllCPVel","useLayoutEffect","window","innerWidth","onClick","prev","setC1x","bind","setC1y","setC2x","setC2y","setC1xVelocity","setC1yVelocity","setC2xVelocity","setC2yVelocity","abs","generateColorPalette","size","slice","numColorsToGenerate","setNumRadials","setScaleVelocity","n","href","renderFrame","canvas","timeDelta","center","innerHeight","clearRect","width","lineWidth","drawSurroundingCircle","curve","getCurve","i","PI","render","radius","arc","StyledCanvas","RadialsCanvas","canvasRef","useRef","resizeCanvas","current","newMaxCurveSize","renderRequestId","startTime","addEventListener","requestAnimationFrame","timestamp","context2D","getContext","deltaTime","cancelAnimationFrame","removeEventListener","useCanvasRenderer","id","ref","AppDiv","App","stateRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8e71cdf.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const controlLabelHeight = 20;\n\nexport const ControlLabel = styled.span`\n  text-align: center;\n  line-height: ${controlLabelHeight}px;\n  padding-left: 10px;\n  font-size: 14px;\n\n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n","import { useCallback } from \"react\";\nimport ReactSlider, { ReactSliderProps } from \"react-slider\";\nimport styled from \"styled-components\";\nimport { ControlLabel, controlLabelHeight } from \"./ControlLabel\";\n\n// https://zillow.github.io/react-slider/\nconst sliderHeight = controlLabelHeight;\nexport const sliderWidth = 200;\nexport const sliderSmallerWidthRatio = 0.7;\n\nconst StyledThumb = styled.div`\n  height: ${sliderHeight + 2}px;\n  line-height: ${sliderHeight + 2}px;\n  width: ${sliderHeight + 2}px;\n  text-align: center;\n  background-color: #0099ff;\n  color: #fff;\n  border-radius: 50%;\n  cursor: grab;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Thumb = (props: any, state: any) => (\n  <StyledThumb {...props}>{state.valueNow}</StyledThumb>\n);\n\nconst StyledTrack = styled.div<{ index: number }>`\n  height: ${sliderHeight}px;\n  border-radius: 999px;\n  background: ${(props) => (props.index === 0 ? \"#005bd9\" : \"#1e217d\")};\n  border: 1px solid #606060;\n`;\n\nexport const Track = (props: any, state: any) => (\n  <StyledTrack {...props} index={state.index} />\n);\n\nconst StyledSlider = styled(ReactSlider)`\n  width: ${sliderWidth}px;\n\n  @media (max-width: 768px) {\n    width: ${sliderWidth * sliderSmallerWidthRatio}px;\n  }\n`;\n\nconst StyledSliderContainer = styled.div<{ fontSize: number }>`\n  display: flex;\n  padding: 5px 0px;\n  ${StyledThumb} {\n    font-size: ${(p) => p.fontSize}px;\n  }\n`;\n\ninterface SliderProps extends Partial<ReactSliderProps<number>> {\n  value: number;\n  label: string;\n  onChange?: (value: number) => void;\n  smallFont?: boolean;\n}\n\nexport const Slider: React.FC<SliderProps> = ({\n  value,\n  label,\n  onChange: onChangeExternal,\n  step,\n  min,\n  max,\n  smallFont = false,\n}) => {\n  const onChange = useCallback(\n    (newValue) => {\n      onChangeExternal?.(newValue);\n    },\n    [onChangeExternal]\n  );\n\n  return (\n    <StyledSliderContainer fontSize={smallFont ? 9 : 16}>\n      <StyledSlider\n        renderTrack={Track}\n        renderThumb={Thumb}\n        value={[value]}\n        onChange={onChange}\n        step={step}\n        min={min}\n        max={max}\n      />\n      <ControlLabel>{label}</ControlLabel>\n    </StyledSliderContainer>\n  );\n};\n","import vec2 from \"vec2\";\n\nexport class Curve {\n  a1: vec2;\n  c1: vec2;\n  c2: vec2;\n  a2: vec2;\n\n  constructor(a1: vec2, c1: vec2, c2: vec2, a2: vec2) {\n    this.a1 = a1;\n    this.c1 = c1;\n    this.c2 = c2;\n    this.a2 = a2;\n  }\n\n  render(ctx: CanvasRenderingContext2D, rotation: number = 0, offset: vec2 = new vec2(0,0), color: string, drawControlLines: boolean = false, scale: number = 0.7) {\n    const a1 = this.a1.multiply(scale, scale, true).rotate(rotation, undefined, true).add(offset.x, offset.y);\n    const c1 = this.c1.multiply(scale, scale, true).rotate(rotation, undefined, true).add(offset.x, offset.y);;\n    const c2 = this.c2.multiply(scale, scale, true).rotate(rotation, undefined, true).add(offset.x, offset.y);;\n    const a2 = this.a2.multiply(scale, scale, true).rotate(rotation, undefined, true).add(offset.x, offset.y);;\n\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(a1.x, a1.y);\n    ctx.bezierCurveTo(c1.x, c1.y, c2.x, c2.y, a2.x, a2.y);\n\n    if (drawControlLines) {\n      ctx.moveTo(a1.x, a1.y);\n      ctx.lineTo(c1.x, c1.y);\n      ctx.moveTo(c2.x, c2.y);\n      ctx.lineTo(a2.x, a2.y);\n    }\n\n    ctx.stroke();\n  }\n}","import vec2 from \"vec2\";\nimport { Curve } from \"./Curve\";\nimport { DropdownOption } from \"./Dropdown\";\nimport randomColor from \"randomcolor\";\n\nexport const startingCPVelocity = 1.0;\nconst curveSizeToCPSizeRatio = 7.0/5.0;\n\nexport const clamp = (x: number, value: number) => Math.max(Math.min(x, value), -value);\n\nexport type Luminosity = \"normal\" | \"random\" | \"dark\" | \"light\" | \"bright\" | undefined;\n\nexport class State {\n  maxCurveSize = 400;\n  maxControlPointSize = Math.round(this.maxCurveSize*curveSizeToCPSizeRatio);\n  maxCPVelocity = 3;\n\n  maxScaleDelta = 0.25;\n  scale = 1;\n  scaleVelocity = 0.2;\n\n  curveWidth = 4;\n\n  numRadials = 15;\n  skipEveryNthRadial = 0;\n  numberOfRadialsToSkip = 1;\n\n  windowSizeProportion = 0.7;\n\n  c1x: number;\n  c1y: number;\n  c2x: number;\n  c2y: number;\n\n  c1xVelocity: number;\n  c1yVelocity: number;\n  c2xVelocity: number;\n  c2yVelocity: number;\n\n  spin = 0;\n  spinVelocity = 0.1;\n\n  showControlLines = false;\n\n  colorPalette: string[];\n  colorPaletteSize = 1;\n  colorHue?: DropdownOption = { value: \"white\", label: \"White\" };\n  colorLuminosity?: DropdownOption<Luminosity> = { value: \"normal\", label: \"Normal\" };\n\n  renderControls: () => void;\n\n  constructor() {\n    this.setMaxCurveSize(400);\n\n    this.colorPalette = [\"white\"];\n\n    this.c1x = 90;\n    this.c1y = 130;\n    this.c2x = 150;\n    this.c2y = -20;\n\n    this.c1xVelocity = 1.0;\n    this.c1yVelocity = 1.2;\n    this.c2xVelocity = 1.4;\n    this.c2yVelocity = 1.6;\n\n    this.renderControls = () => {}\n  }\n\n  setNumRadials(numRadials: number) {\n    this.numRadials = numRadials;\n  }\n\n  setMaxCurveSize(maxCurveSize: number) {\n    this.maxCurveSize = maxCurveSize;\n    this.maxControlPointSize = Math.round(this.maxCurveSize*curveSizeToCPSizeRatio);\n  }\n\n  setC1x(c1x: number) {\n    this.c1x = clamp(c1x, this.maxControlPointSize);\n  }\n  setC1y(c1y: number) {\n    this.c1y = clamp(c1y, this.maxControlPointSize);\n  }\n  setC2x(c2x: number) {\n    this.c2x = clamp(c2x, this.maxControlPointSize);\n  }\n  setC2y(c2y: number) {\n    this.c2y = clamp(c2y, this.maxControlPointSize);\n  }\n  setC1xVelocity(vel: number) {\n    this.c1xVelocity = clamp(this.c1xVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n  setC1yVelocity(vel: number) {\n    this.c1yVelocity = clamp(this.c1yVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n  setC2xVelocity(vel: number) {\n    this.c2xVelocity = clamp(this.c2xVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n  setC2yVelocity(vel: number) {\n    this.c2yVelocity = clamp(this.c2yVelocity >= 0 ? vel : -vel, this.maxCPVelocity);\n  }\n\n  setScaleVelocity(vel: number) {\n    this.scaleVelocity = clamp(this.scaleVelocity >= 0 ? vel : -vel, 1);\n  }\n\n  getCurve() {\n    return new Curve(\n      new vec2(0, 0),\n      new vec2(this.c1x, this.c1y),\n      new vec2(this.c2x, this.c2y),\n      new vec2(this.maxCurveSize, 0)\n    );\n  }\n\n  generateColorPalette() {\n    this.colorPalette =\n      this.colorHue?.value === \"white\"\n        ? [\"white\"]\n        : randomColor({\n            count: this.colorPaletteSize,\n            hue: this.colorHue?.value ?? \"random\",\n            luminosity: this.colorLuminosity?.value === \"normal\" ? undefined : this.colorLuminosity?.value\n          });\n\n    this.colorPaletteSize = this.colorPalette.length;\n  }\n}","import { default as ReactToggle } from \"react-toggle\";\nimport styled from \"styled-components\";\nimport { ControlLabel } from \"./ControlLabel\";\n\nimport \"./Toggler.css\";\n\n// Docs: http://aaronshaf.github.io/react-toggle/\n\ninterface TogglerProps {\n  label: string;\n  defaultChecked: boolean;\n  onChange: () => void;\n}\n\nconst ContainerDiv = styled.div`\n  display: flex;\n`;\n\nconst StyledControlLabel = styled(ControlLabel)`\n  margin: 5px 0px;\n`;\n\nexport const Toggler: React.FC<TogglerProps> = ({\n  defaultChecked,\n  onChange,\n}) => (\n  <ContainerDiv>\n    <ReactToggle\n      defaultChecked={defaultChecked}\n      icons={false}\n      onChange={onChange}\n    />\n    <StyledControlLabel>Show Control Lines</StyledControlLabel>\n  </ContainerDiv>\n);\n","import Select from \"react-select\";\nimport styled from \"styled-components\";\nimport { ControlLabel } from \"./ControlLabel\";\nimport { sliderSmallerWidthRatio, sliderWidth } from \"./Slider\";\n\nconst selectControlHeight = 24;\n\nconst customSelectStyles = {\n  control: (provided: any) => ({\n    ...provided,\n    height: `${selectControlHeight}px`,\n    minHeight: `${selectControlHeight}px`,\n    backgroundColor: \"#0099ff\",\n    border: \"none\",\n    color: \"white\",\n  }),\n  option: (provided: any, state: any) => ({\n    ...provided,\n    color: state.isSelected ? \"white\" : \"black\",\n  }),\n  indicatorsContainer: (provided: any) => ({\n    ...provided,\n    padding: 0,\n    height: `${selectControlHeight}px`,\n    minHeight: `${selectControlHeight}px`,\n  }),\n  indicatorSeparator: (provided: any) => ({\n    ...provided,\n    backgroundColor: \"white\",\n  }),\n  input: (provided: any) => ({\n    ...provided,\n    caretColor: \"transparent\",\n  }),\n  placeholder: (provided: any) => ({\n    ...provided,\n    paddingTop: 2,\n    paddingLeft: 5,\n    fontStyle: \"italic\",\n    color: \"white\",\n  }),\n  singleValue: (provided: any) => ({\n    ...provided,\n    paddingTop: 2,\n    paddingLeft: 5,\n    display: \"inline-block\",\n    color: \"white\",\n  }),\n  valueContainer: () => ({\n    fontSize: \"15px\",\n    height: `${selectControlHeight}px`,\n    minHeight: `${selectControlHeight}px`,\n  }),\n  menu: (provided: any) => ({\n    ...provided,\n    zIndex: 9,\n  }),\n  menuList: (provided: any) => ({\n    ...provided,\n    zIndex: 9,\n  }),\n};\n\nconst StyledSelect = styled(Select)`\n  margin-top: 3px;\n  margin-bottom: 5px;\n  width: ${sliderWidth}px;\n\n  @media (max-width: 768px) {\n    width: ${sliderWidth * sliderSmallerWidthRatio}px;\n  }\n\n  svg {\n    stroke: white !important;\n    fill: white !important;\n  }\n`;\n\nconst StyledDropdownDiv = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport interface DropdownOption<T = string> {\n  value: T;\n  label: string;\n}\n\ninterface DropdownProps<T = string> {\n  placeholder: string;\n  options: DropdownOption[];\n  label: string;\n  value?: DropdownOption;\n  onChange: (newValue: DropdownOption<T>) => void;\n}\n\nexport const Dropdown: React.FC<DropdownProps> = ({\n  placeholder,\n  options,\n  label,\n  value,\n  onChange,\n}) => {\n  return (\n    <StyledDropdownDiv>\n      <StyledSelect\n        options={options}\n        styles={customSelectStyles}\n        placeholder={placeholder}\n        value={value}\n        onChange={(newValue) => onChange(newValue as DropdownOption)}\n      />\n      <ControlLabel>{label}</ControlLabel>\n    </StyledDropdownDiv>\n  );\n};\n","import { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Slider } from \"./Slider\";\nimport { Luminosity, startingCPVelocity, State } from \"./State\";\nimport { Toggler } from \"./Toggler\";\nimport randomColor from \"randomcolor\";\nimport { Dropdown, DropdownOption } from \"./Dropdown\";\n\n// Docs: https://github.com/davidmerfield/randomColor\n\nconst OverlayDiv = styled.div<{ showBackground: boolean }>`\n  position: absolute;\n  color: white;\n  padding-left: 10px;\n  padding-right: 10px;\n  height: 100vh;\n  background: linear-gradient(\n    0.25turn,\n    rgba(0, 0, 0, ${(p) => (p.showBackground ? 0.5 : 0)}),\n    92%,\n    rgba(0, 0, 0, 0)\n  );\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n`;\n\nconst ControlsDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ControlsContainerDiv = styled.div``;\n\nconst StyledDivider = styled.div`\n  background-color: #555555;\n  justify-self: center;\n  align-self: center;\n  height: 1px;\n  width: 95%;\n  margin: 8px 0px;\n\n  @media (max-width: 768px) {\n    margin: 4px 0px;\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: #0099ff;\n  border-radius: 5px;\n  color: white;\n  font-size: 20px;\n  margin-top: 10px;\n  cursor: pointer;\n`;\n\nconst ControlButton = styled.button`\n  background-color: #0099ff;\n  border-radius: 5px;\n  color: white;\n  font-size: 16px;\n  margin-bottom: 5px;\n  cursor: pointer;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst StyledRegenPaletteButton = styled(ControlButton)`\n  margin-top: 5px;\n`;\n\nconst StyledSectionLabel = styled.span`\n  color: white;\n  font-size: 16px;\n  padding: 16px 0px 4px;\n  font-weight: bold;\n\n  @media (max-width: 768px) {\n    font-size: 14px;\n    padding: 8px 0px 2px;\n  }\n`;\n\nconst StyledAnchor = styled.a`\n color: white;\n &:visited { color: whitesmoke; }\n &:hover { color: #06e; }​\n`;\n\nconst StyledFooter = styled.div`\n  font-size: 14px;\n  padding-bottom: 10px;\n`;\n\nconst StyledControlScrollerDiv = styled.div`\n  overflow: auto;\n  padding-right: 10px;\n  height: 100%;\n`;\n\nconst useForceUpdate = () => {\n  const [, updateState] = useState({});\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  return forceUpdate;\n};\n\nexport const ControlsOverlay: React.FC<{ state: State }> = ({ state }) => {\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    state.renderControls = forceUpdate;\n  }, [forceUpdate, state]);\n\n  const [showControls, setShowControls] = useState(false);\n\n  const [allCPVel, setAllCPVel] = useState(startingCPVelocity);\n\n  // On mobile, controls are closed by default.\n  useLayoutEffect(() => {\n    if (window.innerWidth > 1280) setShowControls(true);\n  }, []);\n\n  const renderColorsSection = () => (\n    <>\n      <StyledSectionLabel>Colors</StyledSectionLabel>\n      <Dropdown\n        options={[\n          { value: \"white\", label: \"White\" },\n          { value: \"blue\", label: \"Blue\" },\n          { value: \"red\", label: \"Red\" },\n          { value: \"green\", label: \"Green\" },\n          { value: \"orange\", label: \"Orange\" },\n          { value: \"yellow\", label: \"Yellow\" },\n          { value: \"purple\", label: \"Purple\" },\n          { value: \"pink\", label: \"Pink\" },\n          { value: \"monochrome\", label: \"Monochrome\" },\n          { value: \"random\", label: \"Random\" },\n        ]}\n        value={state.colorHue}\n        onChange={(hue) => {\n          state.colorHue = hue;\n          state.generateColorPalette();\n        }}\n        placeholder=\"Select...\"\n        label=\"Hue\"\n      />\n      <Dropdown\n        options={[\n          { value: \"normal\", label: \"Normal\" },\n          { value: \"light\", label: \"Light\" },\n          { value: \"dark\", label: \"Dark\" },\n          { value: \"bright\", label: \"Bright\" },\n          { value: \"random\", label: \"Random\" },\n        ]}\n        value={state.colorLuminosity as DropdownOption}\n        onChange={(luminosity) => {\n          state.colorLuminosity = luminosity as DropdownOption<Luminosity>;\n          state.generateColorPalette();\n        }}\n        placeholder=\"Select...\"\n        label=\"Luminosity\"\n      />\n      <Slider\n        value={state.colorPaletteSize}\n        min={1}\n        max={state.numRadials}\n        onChange={(size) => {\n          if (state.colorPalette.length !== size) {\n            if (state.colorPalette.length > size) {\n              state.colorPalette = state.colorPalette.slice(0, size);\n            } else {\n              state.colorPalette = state.colorPalette.slice(0, size);\n              const numColorsToGenerate = size - state.colorPalette.length;\n              state.colorPalette = [\n                ...state.colorPalette,\n                ...randomColor({\n                  count: numColorsToGenerate,\n                  hue:\n                    state.colorHue?.value === \"white\"\n                      ? \"monochrome\"\n                      : state.colorHue?.value ?? \"random\",\n                  luminosity:\n                    state.colorLuminosity?.value === \"normal\"\n                      ? undefined\n                      : state.colorLuminosity?.value,\n                }),\n              ];\n            }\n          }\n\n          state.colorPaletteSize = size;\n        }}\n        label=\"Num of Colors\"\n      />\n      <StyledRegenPaletteButton\n        onClick={() => {\n          state.generateColorPalette();\n        }}\n      >\n        Regenerate Color Palette\n      </StyledRegenPaletteButton>\n    </>\n  );\n\n  const renderNumberOfRadialsSection = () => (\n    <>\n      <StyledSectionLabel>Radial Properties</StyledSectionLabel>\n      <Slider\n        value={state.numRadials}\n        min={1}\n        max={75}\n        onChange={(numRadials) => {\n          state.setNumRadials(numRadials);\n          if (numRadials < state.colorPalette.length) {\n            state.colorPalette = state.colorPalette.slice(0, numRadials);\n            state.colorPaletteSize = numRadials;\n          }\n        }}\n        label=\"Num of Radials\"\n      />\n      <Slider\n        value={state.scale}\n        min={1 - state.maxScaleDelta}\n        max={1 + state.maxScaleDelta}\n        step={0.01}\n        onChange={(scale) => (state.scale = scale)}\n        smallFont\n        label=\"Scale\"\n      />\n      <Slider\n        value={Math.abs(state.scaleVelocity)}\n        min={0}\n        max={1}\n        step={0.05}\n        onChange={(vel) => {\n          state.setScaleVelocity(vel);\n        }}\n        smallFont\n        label=\"Scale Velocity\"\n      />\n      <Slider\n        value={state.curveWidth}\n        min={1}\n        max={30}\n        onChange={(value) => (state.curveWidth = value)}\n        label=\"Radial Thickness\"\n      />\n      <Slider\n        value={state.spinVelocity}\n        min={-1}\n        max={1}\n        step={0.1}\n        onChange={(vel) => (state.spinVelocity = vel)}\n        smallFont\n        label=\"Spin Velocity\"\n      />\n      <Slider\n        value={state.skipEveryNthRadial}\n        min={0}\n        max={10}\n        onChange={(n) => (state.skipEveryNthRadial = n)}\n        label=\"Skip every Nth one\"\n      />\n      <Slider\n        value={state.numberOfRadialsToSkip}\n        min={1}\n        max={Math.max(state.skipEveryNthRadial - 1, 1)}\n        onChange={(n) => (state.numberOfRadialsToSkip = n)}\n        label=\"Num Radials to Skip\"\n      />\n      <Toggler\n        defaultChecked={state.showControlLines}\n        onChange={() => (state.showControlLines = !state.showControlLines)}\n        label=\"Show Control Lines\"\n      />\n    </>\n  );\n\n  const renderControlPointSection = () => (\n    <>\n      <StyledSectionLabel>Control Points</StyledSectionLabel>\n      <Slider\n        value={state.c1x}\n        min={-state.maxControlPointSize}\n        max={state.maxControlPointSize}\n        onChange={state.setC1x.bind(state)}\n        label=\"CP 1: x Position\"\n        smallFont\n      />\n      <Slider\n        value={state.c1y}\n        min={-state.maxControlPointSize}\n        max={state.maxControlPointSize}\n        onChange={state.setC1y.bind(state)}\n        label=\"CP 1: y Position\"\n        smallFont\n      />\n      <Slider\n        value={state.c2x}\n        min={-state.maxControlPointSize}\n        max={state.maxControlPointSize}\n        onChange={state.setC2x.bind(state)}\n        label=\"CP 2: x Position\"\n        smallFont\n      />\n      <Slider\n        value={state.c2y}\n        min={-state.maxControlPointSize}\n        max={state.maxControlPointSize}\n        onChange={state.setC2y.bind(state)}\n        label=\"CP 2: y Position\"\n        smallFont\n      />\n    </>\n  );\n\n  const renderControlPointVelocitySection = () => (\n    <>\n      <StyledSectionLabel>Control Point Velocities</StyledSectionLabel>\n      <Slider\n        value={allCPVel}\n        min={0}\n        max={state.maxCPVelocity}\n        onChange={(vel) => {\n          state.setC1xVelocity(vel);\n          state.setC1yVelocity(vel);\n          state.setC2xVelocity(vel);\n          state.setC2yVelocity(vel);\n          setAllCPVel(vel);\n        }}\n        label=\"Set All CP Velocities\"\n        step={0.01}\n        smallFont\n      />\n      <StyledDivider />\n      <Slider\n        value={Math.abs(state.c1xVelocity)}\n        min={0}\n        max={state.maxCPVelocity}\n        onChange={state.setC1xVelocity.bind(state)}\n        label=\"CP 1: x Velocity\"\n        step={0.01}\n        smallFont\n      />\n      <Slider\n        value={Math.abs(state.c1yVelocity)}\n        min={0}\n        max={state.maxCPVelocity}\n        onChange={state.setC1yVelocity.bind(state)}\n        label=\"CP 1: y Velocity\"\n        step={0.01}\n        smallFont\n      />\n      <Slider\n        value={Math.abs(state.c2xVelocity)}\n        min={0}\n        max={state.maxCPVelocity}\n        onChange={state.setC2xVelocity.bind(state)}\n        label=\"CP 2: x Velocity\"\n        step={0.01}\n        smallFont\n      />\n      <Slider\n        value={Math.abs(state.c2yVelocity)}\n        min={0}\n        max={state.maxCPVelocity}\n        onChange={state.setC2yVelocity.bind(state)}\n        label=\"CP 2: y Velocity\"\n        step={0.01}\n        smallFont\n      />\n    </>\n  );\n\n  const renderControls = () => (\n    <ControlsDiv>\n      {renderControlPointSection()}\n      {renderControlPointVelocitySection()}\n      {renderColorsSection()}\n      {renderNumberOfRadialsSection()}\n    </ControlsDiv>\n  );\n\n  return (\n    <OverlayDiv showBackground={showControls}>\n      <StyledControlScrollerDiv>\n        <StyledButton onClick={() => setShowControls((prev) => !prev)}>\n          {showControls ? \"Hide Controls\" : \"Show Controls\"}\n        </StyledButton>\n        {showControls && (\n          <ControlsContainerDiv>{renderControls()}</ControlsContainerDiv>\n        )}\n      </StyledControlScrollerDiv>\n      {showControls && (\n        <StyledFooter>\n          ©\n          <StyledAnchor href=\"http://www.zackmfleischman.com\">\n            Zack M Fleischman\n          </StyledAnchor>\n        </StyledFooter>\n      )}\n    </OverlayDiv>\n  );\n};\n","import vec2 from \"vec2\";\nimport { State } from \"./State\";\n\nexport type RenderFrame = (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D,  state: State, timeDelta: number) => void;\n\nexport const renderFrame: RenderFrame = (canvas, ctx,  state, timeDelta) => {\n  updateState(state, timeDelta);\n  const center = new vec2(window.innerWidth / 2.0, window.innerHeight / 2.0);\n\n  // Setup next frame\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = \"white\";\n  ctx.lineWidth = state.curveWidth;\n\n  drawSurroundingCircle(ctx, state, center);\n\n  const curve = state.getCurve();\n  for (let i = 0; i < state.numRadials; ++i) {\n    if (state.skipEveryNthRadial > 0 && i % (state.skipEveryNthRadial+1) <= state.numberOfRadialsToSkip-1) continue;\n\n    const rotation = (((Math.PI * 2) / state.numRadials) * i) + state.spin;\n    curve.render(ctx, rotation, center, state.colorPalette[i % state.colorPalette.length], state.showControlLines, state.scale);\n  }\n};\n\nconst drawSurroundingCircle = (ctx: CanvasRenderingContext2D, state: State, center: vec2) => {\n  ctx.strokeStyle = state.colorPalette[0];\n  const radius = state.maxCurveSize * state.scale;\n  ctx.moveTo(center.x + radius, center.y);\n  ctx.arc(center.x, center.y, radius, 0, Math.PI*2);\n  ctx.stroke();\n}\n\nconst updateState = (state: State, timeDelta: number) => {\n  if (!timeDelta) return;\n\n  if (state.c1x >= state.maxControlPointSize) \n    state.c1xVelocity = -Math.abs(state.c1xVelocity);\n  if (state.c1x <= -state.maxControlPointSize) \n    state.c1xVelocity = Math.abs(state.c1xVelocity);\n\n  if (state.c1y >= state.maxControlPointSize) \n    state.c1yVelocity = -Math.abs(state.c1yVelocity);\n  if (state.c1y <= -state.maxControlPointSize) \n    state.c1yVelocity = Math.abs(state.c1yVelocity);\n\n  if (state.c2x >= state.maxControlPointSize) \n    state.c2xVelocity = -Math.abs(state.c2xVelocity);\n  if (state.c2x <= -state.maxControlPointSize) \n    state.c2xVelocity = Math.abs(state.c2xVelocity);\n\n  if (state.c2y >= state.maxControlPointSize) \n    state.c2yVelocity = -Math.abs(state.c2yVelocity);\n  if (state.c2y <= -state.maxControlPointSize) \n    state.c2yVelocity = Math.abs(state.c2yVelocity);\n\n  state.setC1x(state.c1x + state.c1xVelocity*(timeDelta/10));\n  state.setC1y(state.c1y + state.c1yVelocity*(timeDelta/10));\n  state.setC2x(state.c2x + state.c2xVelocity*(timeDelta/10));\n  state.setC2y(state.c2y + state.c2yVelocity*(timeDelta/10));\n\n  state.spin = state.spin + state.spinVelocity*timeDelta/500 % (Math.PI*2.0)\n\n  if (state.scale >= 1+state.maxScaleDelta) \n    state.scaleVelocity = -Math.abs(state.scaleVelocity);\n  if (state.scale <= 1-state.maxScaleDelta) \n    state.scaleVelocity = Math.abs(state.scaleVelocity);\n  state.scale = state.scale + state.scaleVelocity*timeDelta/3500;\n\n  state.renderControls();\n}","import styled from \"styled-components\";\nimport { renderFrame } from \"./renderFrame\";\nimport { State } from \"./State\";\nimport { useCanvasRenderer } from \"./useCanvasRenderer\";\n\nconst StyledCanvas = styled.canvas`\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background-color: #222222;\n  overflow-y: none;\n`;\n\nexport const RadialsCanvas: React.FC<{ state: State }> = ({ state }) => {\n  const canvasRef = useCanvasRenderer(renderFrame, state);\n  return <StyledCanvas id=\"radials-canvas\" ref={canvasRef} />;\n};\n","import { useRef, useEffect, useCallback } from \"react\";\nimport { RenderFrame } from \"./renderFrame\";\nimport { State } from \"./State\";\n\nexport const useCanvasRenderer = (render: RenderFrame, state: State) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const resizeCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      const newMaxCurveSize =\n        (Math.min(canvas.width, canvas.height) * state.windowSizeProportion) /\n        2;\n      state.setMaxCurveSize(newMaxCurveSize);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    let renderRequestId: number;\n    let startTime: number | undefined;\n    window.addEventListener(\"resize\", resizeCanvas, false);\n    resizeCanvas();\n\n    const renderFrame = (timestamp: number) => {\n      const canvas = canvasRef.current;\n      const context2D = canvas?.getContext(\"2d\");\n\n      if (startTime === undefined) startTime = timestamp;\n      const deltaTime = timestamp - startTime;\n      startTime = timestamp;\n\n      if (canvas && context2D) render(canvas, context2D, state, deltaTime);\n\n      renderRequestId = requestAnimationFrame(renderFrame);\n    };\n    requestAnimationFrame(renderFrame);\n\n    // Cleanup\n    return () => {\n      cancelAnimationFrame(renderRequestId);\n      window.removeEventListener(\"resize\", resizeCanvas);\n    };\n  }, [render, state, resizeCanvas]);\n\n  return canvasRef;\n};\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ControlsOverlay } from \"./ControlsOverlay\";\nimport { RadialsCanvas } from \"./RadialsCanvas\";\nimport { State } from \"./State\";\n\nconst AppDiv = styled.div`\n  position: relative;\n`;\n\nfunction App() {\n  const stateRef = useRef<State>(new State());\n\n  return (\n    <AppDiv>\n      <RadialsCanvas state={stateRef.current} />\n      <ControlsOverlay state={stateRef.current} />\n    </AppDiv>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}